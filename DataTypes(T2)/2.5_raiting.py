# 5. Реализовать структуру «Рейтинг»,
# представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
#
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
#
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].

my_list = [7, 5, 3, 3, 2]
print(my_list)
new_el = None

# Добавил многократное добавление
while new_el != "exit":
    # Получение данных от пользователя
    new_el = input('Введите новый элемент рейтинга или "exit" для выхода из программы:\n> ')

    if not new_el.isdigit() or int(new_el) == 0:
        # Проверка данных на корректность
        print('Необходимо ввести целое натуральное число')
    else:
        new_el = int(new_el)

        # Вставка числа в список.
        # Реализован простейший вариант со сравнением числа с каждым элементом списка
        # Можно оптимизировать заменой метода поиска на более оптимальный (метод деления отрезка пополам, к примеру)
        for i in range(len(my_list) + 1):
            if i == len(my_list) or new_el > my_list[i]:
                print(i)
                my_list.insert(i, new_el)
                break
    print(my_list)
